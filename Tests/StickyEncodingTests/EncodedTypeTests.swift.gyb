///
///  EncodedTypeTests.swift
///
///  Copyright 2017 Tony Stone
///
///  Licensed under the Apache License, Version 2.0 (the "License");
///  you may not use this file except in compliance with the License.
///  You may obtain a copy of the License at
///
///  http://www.apache.org/licenses/LICENSE-2.0
///
///  Unless required by applicable law or agreed to in writing, software
///  distributed under the License is distributed on an "AS IS" BASIS,
///  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
///  See the License for the specific language governing permissions and
///  limitations under the License.
///
///  Created by Tony Stone on 10/15/17.
///
import XCTest

@testable import StickyEncoding

/// =================================== NOTICE ========================================
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///
/// Modify the  *.swift.gyb file instead.
/// ===================================================================================
%{
    variants = ["Bool", "Int", "Int8", "Int16", "Int32", "Int64", "UInt", "UInt8", "UInt16", "UInt32", "UInt64", "Float", "Double", "String"]
}%
///
/// Tests for enum type `EncodedType`.
///
class EncodedTypeTests: XCTestCase {
%  for Type in variants:

    // MARK: - `${Type}` Tests

    ///
    /// Test that the `${Type}.encodedType` var returns the proper enum value from the `EncodedType` enum.
    ///
    func testEncodedTypeFor${Type}() {
        XCTAssertEqual(${Type}.encodedType, EncodedType.${Type.lower()})
    }

    ///
    /// Test that the `EncodedType.${Type.lower()}` description value is correct.
    ///
    func testDescriptionFor${Type}() {
        XCTAssertEqual(EncodedType.${Type.lower()}.description, "${Type}")
    }

    ///
    /// Test that the `EncodedType.${Type.lower()}` debugDescription value is correct.
    ///
    func testDebugDescriptionFor${Type}() {
        XCTAssertEqual(EncodedType.${Type.lower()}.debugDescription, "${Type}")
    }
% end

    // MARK: - `Unknown` Tests

    ///
    /// Test that an Unknown type description value is correct.
    ///
    func testDescriptionForUnknownType() {
        XCTAssertEqual(EncodedType(999).description, "Unknown")
    }

    ///
    /// Test that an Unknown type debugDescription value is correct.
    ///
    func testDebugDescriptionForUnknownType() {
        XCTAssertEqual(EncodedType(999).debugDescription, "Unknown")
    }
}

///
/// Performance tests for enum type `EncodedType`.
///
class EncodedTypePerformanceTests: XCTestCase {
%{
    TestIterations = 500000
}%
%  for Type in variants:

    // MARK: - `${Type}` Tests

    ///
    /// Test the performance of accessing the `${Type}.encodedType` var.
    ///
    func testEncodedTypeFor${Type}Performance() {

        self.measure {
            for _ in 1...${TestIterations} {
                let _ = ${Type}.encodedType
            }
        }
    }
% end
}
